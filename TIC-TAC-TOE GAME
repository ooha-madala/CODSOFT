#include <iostream>
using namespace std;
const int SIZE = 3;
char board[SIZE][SIZE] = {{' ', ' ', ' '}, {' ', ' ', ' '}, {' ', ' ', ' '}};
char currentPlayer = 'X';
//To print the board
void printBoard() {
    cout << "  0   1   2\n";
    for (int i = 0; i < SIZE; ++i) {
        cout << i << " "; // Row index
        for (int j = 0; j < SIZE; ++j) {
            cout << board[i][j];
            if (j < SIZE - 1) 
                cout << " | ";
        }
        cout << endl;
        if (i < SIZE - 1) 
            cout << "---------" << endl;
    }
}

//check for a win
bool checkWin() {
    //Rows and columns
    for (int i = 0; i < SIZE; ++i) {
        if ((board[i][0] == currentPlayer && board[i][1] == currentPlayer && board[i][2] == currentPlayer) ||
            (board[0][i] == currentPlayer && board[1][i] == currentPlayer && board[2][i] == currentPlayer)) {
            return true;
        }
    }
    //diagonals
    if ((board[0][0] == currentPlayer && board[1][1] == currentPlayer && board[2][2] == currentPlayer) ||
        (board[0][2] == currentPlayer && board[1][1] == currentPlayer && board[2][0] == currentPlayer)) {
        return true;
    }
    return false;
}
//check for a draw
bool checkDraw() {
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (board[i][j] == ' ') 
                return false;
        }
    }
    return true;
}

//handle player input
void playerMove() {
    int row, col;
    while (true) {
        cout << "Player " << currentPlayer << ", enter row and column (0, 1, or 2): ";
        cin >> row >> col;
        if (row >= 0 && row < SIZE && col >= 0 && col < SIZE && board[row][col] == ' ') {
            board[row][col] = currentPlayer;
            break;
        } else {
            cout << "Invalid move. Try again." << endl;
        }
    }
}

// Main function to play the game
void playGame() {
    bool gameEnded = false;
    
    while (!gameEnded) {
        printBoard();
        playerMove();
        
        if (checkWin()) {
            printBoard();
            cout << "Player " << currentPlayer << " wins!" << endl;
            gameEnded = true;
        } else if (checkDraw()) {
            printBoard();
            cout << "The game is a draw!" << endl;
            gameEnded = true;
        } else {
            // Switch players
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        }
    }
}

//ask if players want to play again
bool askPlayAgain() {
    char response;
    cout << "Do you want to play again? (y/n): ";
    cin >> response;
    return response == 'y' || response == 'Y';
}

int main() {
    do {
        // Reset the board and current player for each new game
        for (int i = 0; i < SIZE; ++i) {
            for (int j = 0; j < SIZE; ++j) {
                board[i][j] = ' ';
            }
        }
        currentPlayer = 'X';
        playGame();
    } while (askPlayAgain());

    cout << "Thanks for playing!" << endl;
    return 0;
}
